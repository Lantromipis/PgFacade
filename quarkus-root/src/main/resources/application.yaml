pg-facade:
  shutdown:
    await-clients: true
    wait-for-clients-duration: PT30S #format like in java.time.Duration.parse(CharSequence text) https://docs.oracle.com/javase/8/docs/api/java/time/Duration.html#parse-java.lang.CharSequence-
  proxy:
    port: 5433
    max-connections: 100
    connection-pool:
      enabled: false
    inactive-clients:
      disconnect: true
      inactive-connection-timeout: PT5M #format like in java.time.Duration.parse(CharSequence text) https://docs.oracle.com/javase/8/docs/api/java/time/Duration.html#parse-java.lang.CharSequence-
      check-interval: PT10S #format like in java.time.Duration.parse(CharSequence text) https://docs.oracle.com/javase/8/docs/api/java/time/Duration.html#parse-java.lang.CharSequence-
    parameter-status-override:
      "is_superuser": "off"
      "in_hot_standby": "off"
  storage:
    adapter: file
    file:
      directory-path: /var/pgfacade/stored #access should be granted to system user which will run PgFacade app
      postgres-nodes-info-filename: postgres-nodes-info #wihtout extension
      postgres-settings-info-filename: postgres-settings-info #wihtout extension
  archiving:
    enabled: true
    adapter: s3
    basebackup:
      create-interval: PT5M
      keep-old-interval: PT15M
      list-backups-interval: PT1M
    s3:
      protocol: http
      endpoint: http://minio:9000
      access-key: XyWoumXpa0e5Pv8H
      secret-key: wQxh5RfnLO0MN0nDv390nfo6piLvhStM
      region: eu-central-1
      multipart-upload-part-size-mb: 5
      backups-bucket: pgfacade
      wal-bucket: pgfacade
  orchestration:
    adapter: no_adapter
    common:
      postgres-startup-check:
        start-period: 2000 #millisecinds
        interval: 100 #millisecinds
        retries: 100
      postgres-dead-check:
        interval: PT1S #format like in java.time.Duration.parse(CharSequence text) https://docs.oracle.com/javase/8/docs/api/java/time/Duration.html#parse-java.lang.CharSequence-
        retries: 3
      standby:
        count: 1
        count-check-interval: PT1S
    no-adapter:
      primary-host: localhost
      primary-port: 5432
    docker:
      docker-host: unix:///var/run/docker.sock
      postgres-network-name: pg-facade-postgres-network
      postgres-container-name: pg-facade-managed-postgres
      postgres-volume-name: pg-facade-postgres-volume
      postgres-image-tag: "postgres:latest"
      postgres-image-pg-data-dir: "/var/lib/postgresql/data"
      helper-object-name: "pg-facade-temp"
      postgres-healthcheck:
        start-period: 3000 #millisecinds
        interval: 5000 #millisecinds
        timeout: 100 #millisecinds
        retries: 10
        cmd-shell-command: pg_isready -U ${pg-facade.postgres.users.pg-facade.username}

  postgres:
    users:
      superuser: #used only when creating new database to create other users
        username: postgres
        password: postgres
        database: postgres
      pg-facade:
        username: pgfacade
        password: pgfacade
        database: pgfacade
      replication:
        username: replicant
        password: replicant
        database: postgres
quarkus:
  http:
    port: 8080
  log:
    level: DEBUG
    console:
      format: "[%d{yyyy-MM-dd'T'HH:mm:ss.SSSXXX}] [%-5p] [%-50.50c{3.}] [%-20.20M] - %s%e%n"
    category:
      "org.apache" :
        level: ERROR
  banner:
    enabled: true
    path: banner
  application:
    name: PgFacade

"%dev":
  quarkus:
    devservices:
      enabled: false
    test:
      continuous-testing: disabled
