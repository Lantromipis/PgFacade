pg-facade:
  proxy:
    port: 5433
    parameter-status-override:
      "is_superuser": "off"
      "in_hot_standby": "off"
  orchestration:
    common:
      postgres-startup-check:
        start-period: 2000 #millisecinds
        interval: 100 #millisecinds
        retries: 100
      postgres-dead-check:
        interval: 100 #millisecinds
        retries: 3
    adapter: docker
    docker:
      docker-host: unix:///var/run/docker.sock
      postgres-network-name: pg-facade-postgres-network
      postgres-container-name: pg-facade-managed-postgres
      postgres-image-tag: "postgres:latest"
      helper-object-name: "pg-facade-temp"
      postgres-healthcheck:
        start-period: 3000 #millisecinds
        interval: 5000 #millisecinds
        timeout: 100 #millisecinds
        retries: 10
        cmd-shell-command: pg_isready -U ${pg-facade.postgres.users.pg-facade.username}

  postgres:
    ip-placeholder: ip-address
    users:
      pg-facade:
        username: postgres
        password: postgres
        database: postgres
        pg-hba-conf-line: host all ${pg-facade.postgres.users.pg-facade.username} ${pg-facade.postgres.ip-placeholder} md5
      replication: #TODO create new user when creating master
        username: postgres
        password: postgres
        database: postgres
        pg-hba-conf-line: host replication ${pg-facade.postgres.users.replication.username} ${pg-facade.postgres.ip-placeholder} md5
    postgresql-conf-override:
      shared_buffers: 256MB


quarkus:
  http:
    port: 8080
  log:
    level: INFO
    console:
      format: "[%d{yyyy-MM-dd'T'HH:mm:ss.SSSXXX}] [%-5p] [%-50.50c{3.}] [%-20.20M] - %s%e%n"
  banner:
    enabled: true
    path: banner
  application:
    name: PgFacade

"%dev":
  quarkus:
    devservices:
      enabled: false
    test:
      continuous-testing: disabled
